--- # ------------------------------------------------
# ------------------------------------------------
# test workflow
name: Test

# ------------------------------------------------
# this workflow will run
# • anytime a commit is made to `in-progress`
# • anytime a pull request is opened against main
# ------------------------------------------------
on:
  push:
    branches:
      - 'in-progress'
  pull_request:
    branches:
      - 'main'

jobs:
  test:
    # --------------------------------------------
    # workflow runs on an ubuntu image
    # --------------------------------------------
    runs-on: ubuntu-latest
    container:
      image: node:18  # Use Docker container to bypass action caching

    # --------------------------------------------
    # define the steps we want to run
    # --------------------------------------------
    steps:
      # ------------------------------------------
      # manual git checkout to avoid actions/checkout cache
      # ------------------------------------------
      - name: Checkout code
        run: |
          apt-get update && apt-get install -y git
          git clone https://github.com/${{ github.repository }}.git .
          git checkout ${{ github.sha }}

      # ------------------------------------------
      # find node version (keeping your NVMRC reference)
      # ------------------------------------------
      - name: Determine node version
        run: test -f .nvmrc && echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm

      # ------------------------------------------
      # install specific node version if different
      # ------------------------------------------
      - name: Verify Node version
        run: |
          echo "Required: ${{ steps.nvm.outputs.NVMRC }}"
          echo "Current: $(node --version)"

      # ------------------------------------------
      # install pnpm
      # ------------------------------------------
      - name: Install pnpm
        run: npm install -g pnpm@latest

      # ------------------------------------------
      # install dependencies
      # ------------------------------------------
      - name: Install dependencies
        run: pnpm install

      # ------------------------------------------
      # check formatting
      # ------------------------------------------
      - name: Run formatter
        run: pnpm format

      # ------------------------------------------
      # check linting
      # ------------------------------------------
      - name: Run linter
        run: pnpm lint

      # ------------------------------------------
      # run unit tests
      # ------------------------------------------
      - name: Run unit tests
        run: pnpm test

      # ------------------------------------------
      # build assets
      # ------------------------------------------
      - name: Build assets
        run: pnpm build
