---
import MainLayout from '@/layouts/MainLayout.astro'
import { getCollection, getEntry } from 'astro:content'
import { ProjectCard } from '@/components/ProjectCard'
import { VideoPlayer } from '@/components/VideoPlayer'

export async function getStaticPaths() {
  const keynotes = await getCollection('keynotes')

  return keynotes.map((k) => ({
    params: { year: k.data.year.toString() },
    props: { keynote: k.data },
  }))
}

const { keynote } = Astro.props

// Get all projects and filter for thesis projects from the keynote's students
const allProjects = await getCollection('projects')
const relatedProjects = allProjects
  .map((p) => p.data)
  .filter(
    (project) =>
      project.category.includes('Thesis') &&
      project.author.some((author) => keynote.students?.includes(author))
  )
  .sort((a, b) => (b.year || 0) - (a.year || 0))
---

<MainLayout>
  <div class="container mx-auto">
    <div class="mb-8">
      <a href="/keynotes" class="text-blue-600 hover:text-blue-800">
        ‚Üê Back to all keynotes
      </a>
    </div>

    <div class="grid gap-8">
      <article>
        <div class="flex justify-between items-start mb-4">
          <div>
            <h2 class="text-3xl mb-2 font-neue-display-random">
              {keynote.title}
            </h2>
            <p class="text-gray-600">{keynote.department}</p>
          </div>
          <div class="text-right">
            <time class="text-gray-600">{keynote.date}</time>
            {keynote.time && <p class="text-gray-600">{keynote.time}</p>}
          </div>
        </div>

        <p class="text-gray-700 mb-4">{keynote.description}</p>

        {
          keynote.location && (
            <p class="text-gray-600 mb-4">
              <strong>Location:</strong> {keynote.location}
            </p>
          )
        }

        {
          keynote.video_embed_html && (
            <div class="mt-4 w-full">
              <div
                set:html={keynote.video_embed_html}
                class="[&_iframe]:w-full [&_iframe]:h-full aspect-video"
              />
            </div>
          )
        }

        {
          keynote.students && keynote.students.length > 0 && (
            <div class="mb-4">
              <strong class="text-gray-700">Students:</strong>
              <ul class="list-disc list-inside text-gray-600 flex flex-wrap gap-2">
                {keynote.students.map((student) => (
                  <li>{student}</li>
                ))}
              </ul>
            </div>
          )
        }

        {
          keynote.url && (
            <a
              href={keynote.url}
              target="_blank"
              rel="noopener noreferrer"
              class="text-blue-600 hover:text-blue-800 inline-block mb-4"
            >
              Event Link
            </a>
          )
        }
      </article>

      {
        relatedProjects.length > 0 && (
          <section class="mt-12">
            <h3 class="text-2xl font-semibold mb-6">Projects</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-8">
              {relatedProjects.map((project) => (
                <ProjectCard client:load project={project} />
              ))}
            </div>
          </section>
        )
      }
    </div>
  </div>
</MainLayout>
